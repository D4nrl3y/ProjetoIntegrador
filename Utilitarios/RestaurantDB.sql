-- MySQL Script generated by MySQL Workbench
-- Thu Dec  3 20:33:09 2015
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema RestaurantDB
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `RestaurantDB` ;

-- -----------------------------------------------------
-- Schema RestaurantDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `RestaurantDB` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `RestaurantDB` ;

-- -----------------------------------------------------
-- Table `RestaurantDB`.`states`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RestaurantDB`.`states` ;

CREATE TABLE IF NOT EXISTS `RestaurantDB`.`states` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `acronym` CHAR(2) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  UNIQUE INDEX `acronym_UNIQUE` (`acronym` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RestaurantDB`.`cities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RestaurantDB`.`cities` ;

CREATE TABLE IF NOT EXISTS `RestaurantDB`.`cities` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `state_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  INDEX `id_state_idx` (`state_id` ASC),
  CONSTRAINT `id_state`
    FOREIGN KEY (`state_id`)
    REFERENCES `RestaurantDB`.`states` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RestaurantDB`.`categories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RestaurantDB`.`categories` ;

CREATE TABLE IF NOT EXISTS `RestaurantDB`.`categories` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RestaurantDB`.`products`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RestaurantDB`.`products` ;

CREATE TABLE IF NOT EXISTS `RestaurantDB`.`products` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `category_id` INT NOT NULL,
  `price` DOUBLE NOT NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  INDEX `category_id_idx` (`category_id` ASC),
  CONSTRAINT `category_id`
    FOREIGN KEY (`category_id`)
    REFERENCES `RestaurantDB`.`categories` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RestaurantDB`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RestaurantDB`.`users` ;

CREATE TABLE IF NOT EXISTS `RestaurantDB`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `cpf` CHAR(11) NOT NULL,
  `salary` DOUBLE NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `access` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `cpf_UNIQUE` (`cpf` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RestaurantDB`.`customers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RestaurantDB`.`customers` ;

CREATE TABLE IF NOT EXISTS `RestaurantDB`.`customers` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `city_id` INT NOT NULL,
  `cpf` CHAR(11) NULL,
  `email` VARCHAR(45) NULL,
  `street` VARCHAR(45) NULL,
  `address_number` INT NULL,
  `neighborhood` VARCHAR(45) NULL,
  `zip_code` INT(9) NULL,
  `phone_number` CHAR(11) NOT NULL,
  `comments` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `cpf_UNIQUE` (`cpf` ASC),
  INDEX `city_id_idx` (`city_id` ASC),
  CONSTRAINT `customer_city_id`
    FOREIGN KEY (`city_id`)
    REFERENCES `RestaurantDB`.`cities` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RestaurantDB`.`table_status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RestaurantDB`.`table_status` ;

CREATE TABLE IF NOT EXISTS `RestaurantDB`.`table_status` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RestaurantDB`.`tables`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RestaurantDB`.`tables` ;

CREATE TABLE IF NOT EXISTS `RestaurantDB`.`tables` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `table_status_id` INT NOT NULL,
  `places` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `table_status_id_idx` (`table_status_id` ASC),
  CONSTRAINT `table_status_id`
    FOREIGN KEY (`table_status_id`)
    REFERENCES `RestaurantDB`.`table_status` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RestaurantDB`.`order_status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RestaurantDB`.`order_status` ;

CREATE TABLE IF NOT EXISTS `RestaurantDB`.`order_status` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RestaurantDB`.`cards`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RestaurantDB`.`cards` ;

CREATE TABLE IF NOT EXISTS `RestaurantDB`.`cards` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `serial` INT NOT NULL,
  `status` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `serial_UNIQUE` (`serial` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RestaurantDB`.`orders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RestaurantDB`.`orders` ;

CREATE TABLE IF NOT EXISTS `RestaurantDB`.`orders` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `customer_id` INT NULL,
  `user_id` INT NOT NULL,
  `order_status_id` INT NOT NULL,
  `created_at` DATETIME NOT NULL,
  `card_id` INT NOT NULL,
  `total` DOUBLE NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `customer_id_idx` (`customer_id` ASC),
  INDEX `user_id_idx` (`user_id` ASC),
  INDEX `order_status_id_idx` (`order_status_id` ASC),
  CONSTRAINT `customer_id`
    FOREIGN KEY (`customer_id`)
    REFERENCES `RestaurantDB`.`customers` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `RestaurantDB`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `order_status_id`
    FOREIGN KEY (`order_status_id`)
    REFERENCES `RestaurantDB`.`order_status` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `card_id`
    FOREIGN KEY (`card_id`)
    REFERENCES `RestaurantDB`.`cards` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RestaurantDB`.`order_itens`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RestaurantDB`.`order_itens` ;

CREATE TABLE IF NOT EXISTS `RestaurantDB`.`order_itens` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `order_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  `total` DOUBLE NOT NULL,
  `amount` INT NOT NULL,
  `price` DOUBLE NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `product_id_idx` (`product_id` ASC),
  INDEX `order_id_idx` (`order_id` ASC),
  CONSTRAINT `order_product_id`
    FOREIGN KEY (`product_id`)
    REFERENCES `RestaurantDB`.`products` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `order_id`
    FOREIGN KEY (`order_id`)
    REFERENCES `RestaurantDB`.`orders` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RestaurantDB`.`order_tables`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RestaurantDB`.`order_tables` ;

CREATE TABLE IF NOT EXISTS `RestaurantDB`.`order_tables` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `order_id` INT NOT NULL,
  `table_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `table_id_idx` (`table_id` ASC),
  INDEX `order_id_idx` (`order_id` ASC),
  CONSTRAINT `table_id`
    FOREIGN KEY (`table_id`)
    REFERENCES `RestaurantDB`.`tables` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `table_order_id`
    FOREIGN KEY (`order_id`)
    REFERENCES `RestaurantDB`.`orders` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `RestaurantDB`.`states`
-- -----------------------------------------------------
START TRANSACTION;
USE `RestaurantDB`;
INSERT INTO `RestaurantDB`.`states` (`id`, `name`, `acronym`) VALUES (1, 'Paraná', 'PR');
INSERT INTO `RestaurantDB`.`states` (`id`, `name`, `acronym`) VALUES (2, 'Santa Catarina', 'SC');

COMMIT;


-- -----------------------------------------------------
-- Data for table `RestaurantDB`.`cities`
-- -----------------------------------------------------
START TRANSACTION;
USE `RestaurantDB`;
INSERT INTO `RestaurantDB`.`cities` (`id`, `name`, `state_id`) VALUES (1, 'Guarapuava', 1);
INSERT INTO `RestaurantDB`.`cities` (`id`, `name`, `state_id`) VALUES (2, 'Curitiba', 1);
INSERT INTO `RestaurantDB`.`cities` (`id`, `name`, `state_id`) VALUES (3, 'Pato Branco', 1);
INSERT INTO `RestaurantDB`.`cities` (`id`, `name`, `state_id`) VALUES (4, 'Pinhão', 1);
INSERT INTO `RestaurantDB`.`cities` (`id`, `name`, `state_id`) VALUES (5, 'Blumenau', 2);
INSERT INTO `RestaurantDB`.`cities` (`id`, `name`, `state_id`) VALUES (6, 'Joinvile', 2);
INSERT INTO `RestaurantDB`.`cities` (`id`, `name`, `state_id`) VALUES (7, 'Itajaí', 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `RestaurantDB`.`categories`
-- -----------------------------------------------------
START TRANSACTION;
USE `RestaurantDB`;
INSERT INTO `RestaurantDB`.`categories` (`id`, `name`, `description`) VALUES (1, 'Salgados', 'Categoria dos Salgados');
INSERT INTO `RestaurantDB`.`categories` (`id`, `name`, `description`) VALUES (2, 'Refrigerantes', 'Categoria dos Refrigerantes');
INSERT INTO `RestaurantDB`.`categories` (`id`, `name`, `description`) VALUES (3, 'Sucos', 'Categoria dos Sucos');
INSERT INTO `RestaurantDB`.`categories` (`id`, `name`, `description`) VALUES (4, 'Outras Bebidas', 'Categoria das Outras Bebidas');
INSERT INTO `RestaurantDB`.`categories` (`id`, `name`, `description`) VALUES (5, 'Doces', 'Categoria dos Doces');

COMMIT;


-- -----------------------------------------------------
-- Data for table `RestaurantDB`.`products`
-- -----------------------------------------------------
START TRANSACTION;
USE `RestaurantDB`;
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (1, 'Coxinha', 1, 3.00, 'Coxinha Frita');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (2, 'Pastel', 1, 2.50, 'Pastelzão');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (3, 'Pizza', 1, 4.50, 'Fatia De Pizza');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (4, 'Pão de Queijo', 1, 2.50, 'Pão Dos Deuses');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (5, 'Espetinho', 1, 3.50, 'Espetinho De Carne');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (6, 'Risólis', 1, 2.50, 'Risólis Frito');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (7, 'Esfiha', 1, 2.50, 'Esfiha Assada');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (8, 'Coca-Cola', 2, 2.75, 'Coca-Cola Gelada');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (9, 'Pepsi', 2, 2.75, 'Pepsi Gelada');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (10, 'Fanta-Uva', 2, 2.50, 'Fanta-Uva Gelada');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (11, 'Fanta-Laranja', 2, 2.50, 'Fanta-Laranja Gelada');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (12, 'Sprite', 2, 2.50, 'Sprite Gelada');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (13, 'Soda', 2, 2.50, 'Soda Limonada');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (14, 'Suco de Uva', 3, 4.50, 'Suco de Uva Gelado');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (15, 'Suco de Laranja', 3, 4.50, 'Suco de Laranja Gelado');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (16, 'Suco de Maracujá', 3, 4.50, 'Suco de Uva Gelado');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (17, 'Suco de Morango', 3, 4.50, 'Suco de Morango Com Leite');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (18, 'Suco de Pêssego', 3, 4.50, 'Suco de Pêssego Com Leite');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (19, 'Limonada', 4, 3.50, 'Copo de Limonada');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (20, 'Toddynho', 4, 3.00, 'Toddynho de Caixinha');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (21, 'Iogurte', 4, 3.00, 'Copo de Iogurte');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (22, 'Água Mineral', 4, 1.50, 'Água Mineral Gelada');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (23, 'Brigadeiro', 5, 2.50, 'Um Brigadeiro');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (24, 'Beijinho', 5, 2.50, 'Um Beijinho');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (25, 'Cocada', 5, 3.00, 'Uma Cocada');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (26, 'Bolo', 5, 4.00, 'Uma Fatia de Bolo');
INSERT INTO `RestaurantDB`.`products` (`id`, `name`, `category_id`, `price`, `description`) VALUES (27, 'Torta', 5, 4.00, 'Um Pedaço de Torta');

COMMIT;


-- -----------------------------------------------------
-- Data for table `RestaurantDB`.`users`
-- -----------------------------------------------------
START TRANSACTION;
USE `RestaurantDB`;
INSERT INTO `RestaurantDB`.`users` (`id`, `name`, `cpf`, `salary`, `password`, `created_at`, `access`) VALUES (1, 'admnistrator', '27384759302', 4000, 'adm', '2015-11-25 00:00:00', 3);
INSERT INTO `RestaurantDB`.`users` (`id`, `name`, `cpf`, `salary`, `password`, `created_at`, `access`) VALUES (2, 'manager', '77638920394', 3000, 'mng', '2015-11-25 00:00:00', 2);
INSERT INTO `RestaurantDB`.`users` (`id`, `name`, `cpf`, `salary`, `password`, `created_at`, `access`) VALUES (3, 'employee', '93029384751', 2000, 'emp', '2015-11-25 00:00:00', 1);
INSERT INTO `RestaurantDB`.`users` (`id`, `name`, `cpf`, `salary`, `password`, `created_at`, `access`) VALUES (4, 'vinicius', DEFAULT, DEFAULT, '123', DEFAULT, 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `RestaurantDB`.`customers`
-- -----------------------------------------------------
START TRANSACTION;
USE `RestaurantDB`;
INSERT INTO `RestaurantDB`.`customers` (`id`, `name`, `city_id`, `cpf`, `email`, `street`, `address_number`, `neighborhood`, `zip_code`, `phone_number`, `comments`) VALUES (1, 'Vinicius', 1, '01005364923', 'vininadin@hotmail.com', 'Jose Aldo', 2345, 'Centro', 85010260, '4236232509', 'R$ 50,00 em a ver.');
INSERT INTO `RestaurantDB`.`customers` (`id`, `name`, `city_id`, `cpf`, `email`, `street`, `address_number`, `neighborhood`, `zip_code`, `phone_number`, `comments`) VALUES (2, 'Marcos', 2, '09394857384', 'marcos@hotmail.com', 'Marcos Antonio', 5678, 'Centro', 85012035, '4299580483', 'Nenhuma Observação.');
INSERT INTO `RestaurantDB`.`customers` (`id`, `name`, `city_id`, `cpf`, `email`, `street`, `address_number`, `neighborhood`, `zip_code`, `phone_number`, `comments`) VALUES (3, 'Rogério', 3, '02345677338', 'rogerio@hotmail.com', 'Vicente Machado', 9302, 'Bom Sucesso', 83912035, '4299382947', 'Esqueceu Casaco');

COMMIT;


-- -----------------------------------------------------
-- Data for table `RestaurantDB`.`table_status`
-- -----------------------------------------------------
START TRANSACTION;
USE `RestaurantDB`;
INSERT INTO `RestaurantDB`.`table_status` (`id`, `name`, `description`) VALUES (1, 'Livre', 'Mesa Livre');
INSERT INTO `RestaurantDB`.`table_status` (`id`, `name`, `description`) VALUES (2, 'Ocupada', 'Mesa Ocupada');

COMMIT;


-- -----------------------------------------------------
-- Data for table `RestaurantDB`.`tables`
-- -----------------------------------------------------
START TRANSACTION;
USE `RestaurantDB`;
INSERT INTO `RestaurantDB`.`tables` (`id`, `table_status_id`, `places`, `name`) VALUES (1, 1, 3, 'Mesa 1');
INSERT INTO `RestaurantDB`.`tables` (`id`, `table_status_id`, `places`, `name`) VALUES (2, 1, 4, 'Mesa 2');
INSERT INTO `RestaurantDB`.`tables` (`id`, `table_status_id`, `places`, `name`) VALUES (3, 1, 1, 'Mesa 3');
INSERT INTO `RestaurantDB`.`tables` (`id`, `table_status_id`, `places`, `name`) VALUES (4, 1, 6, 'Mesa 4');

COMMIT;


-- -----------------------------------------------------
-- Data for table `RestaurantDB`.`order_status`
-- -----------------------------------------------------
START TRANSACTION;
USE `RestaurantDB`;
INSERT INTO `RestaurantDB`.`order_status` (`id`, `name`, `description`) VALUES (1, 'Em Aberto', 'Pedido Em Aberto');
INSERT INTO `RestaurantDB`.`order_status` (`id`, `name`, `description`) VALUES (2, 'Concluído', 'Pedido Concluída');
INSERT INTO `RestaurantDB`.`order_status` (`id`, `name`, `description`) VALUES (3, 'Cancelado', 'Pedido Cancelado');

COMMIT;


-- -----------------------------------------------------
-- Data for table `RestaurantDB`.`cards`
-- -----------------------------------------------------
START TRANSACTION;
USE `RestaurantDB`;
INSERT INTO `RestaurantDB`.`cards` (`id`, `serial`, `status`) VALUES (1, 993843, 1);
INSERT INTO `RestaurantDB`.`cards` (`id`, `serial`, `status`) VALUES (2, 993943, 1);
INSERT INTO `RestaurantDB`.`cards` (`id`, `serial`, `status`) VALUES (3, 994043, 1);
INSERT INTO `RestaurantDB`.`cards` (`id`, `serial`, `status`) VALUES (4, 994143, 1);
INSERT INTO `RestaurantDB`.`cards` (`id`, `serial`, `status`) VALUES (5, 994243, 1);

COMMIT;

